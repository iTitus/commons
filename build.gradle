import java.time.Duration

plugins {
    id 'java-library'
    id 'me.champeau.jmh' version '0.7.3'
    id 'maven-publish'
    id 'signing'
    id 'io.github.gradle-nexus.publish-plugin' version '2.0.0'
}

group = 'io.github.ititus'
version = '2.3.3'

wrapper {
    gradleVersion = '8.12.1'
}

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }

    withSourcesJar()
    withJavadocJar()
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

tasks.withType(Test) {
    systemProperty 'file.encoding', 'UTF-8'
}

javadoc {
    options {
        addBooleanOption('Xdoclint:all,-missing', true)
    }
}

repositories {
    mavenCentral()
}

dependencies {
    testImplementation platform('org.junit:junit-bom:5.13.3')
    testImplementation 'org.junit.jupiter:junit-jupiter'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
    testImplementation 'org.assertj:assertj-core:3.27.3'
    testImplementation 'org.mockito:mockito-core:5.18.0'
    testImplementation 'com.google.jimfs:jimfs:1.3.0'
}

test {
    useJUnitPlatform()
    testLogging {
        events 'passed', 'skipped', 'failed'
    }
}

jmh {
    jmhVersion = '1.37'
    warmupIterations = 2
    iterations = 5
    fork = 1
}

tasks.withType(me.champeau.jmh.JmhParameters) {
    jvmArgsAppend = ['-Dfile.encoding=UTF-8']
}

publishing {
    publications {
        MyPublication(MavenPublication) {
            pom {
                name = 'iTitus Commons'
                packaging = 'jar'
                description = 'Library for commonly needed functionality'
                url = 'https://github.com/iTitus/commons'
                licenses {
                    license {
                        name = 'MIT License'
                        url = 'https://mit-license.org'
                    }
                }
                developers {
                    developer {
                        id = 'iTitus'
                        name = 'iTitus'
                        email = 'ititus@users.noreply.github.com'
                    }
                }
                scm {
                    connection = 'scm:git:git://github.com/iTitus/commons.git'
                    developerConnection = 'scm:git:ssh://git@github.com:iTitus/commons.git'
                    url = 'https://github.com/iTitus/commons'
                    tag = "v${version}"
                }
            }

            from components.java
        }
    }
}

signing {
    def signingKey = findProperty('signing_key')
    def signingPassword = findProperty('signing_password')
    useInMemoryPgpKeys(signingKey, signingPassword)
    sign publishing.publications.MyPublication
}

nexusPublishing {
    connectTimeout = clientTimeout = Duration.ofHours(2)
    repositories {
        sonatype {
            stagingProfileId = project.findProperty('ossrh_staging_profile_id')
            username = project.findProperty('ossrh_username')
            password = project.findProperty('ossrh_password')
        }
    }
}
